#include<stdio.h>

struct No {
    int valor;
    No *prox;
};

struct Pilha {

    No *topo;
    int n;

    Pilha() {
        topo = NULL;
        n = 0;
    }

    bool vazia() { // O(1)
        return (topo == NULL);
    }

    void inserir(int v) { // O(1)
        No *novo = new No();
        novo->valor = v;
        if (vazia()) {
            novo->prox = NULL;
            topo = novo;
        } else {
            novo->prox = topo;
            topo = novo;
        }
        n++;
    }

    int tamanho() { // O(1)
        return n;
    }

    void remover() { // O(1)
        if (!vazia()) {
            if (tamanho() == 1) {
                No *aux = topo;
                topo = NULL;
                delete(aux);
            } else {
                No *aux = topo;
                topo = topo->prox;
                delete(aux);
            }
            n--;
        }
    }

    int topoPilha() {
        if (vazia()) {
            return NULL;
        }
        return topo->valor;
    }

    void imprimir()
    {
        No *aux;
        aux=topo;
        while(aux)
        {
            printf("%d\n",aux->valor);
            aux=aux->prox;

        }


    }


};


struct No2 {
    int valor;
    No2 *prox;
};

struct Fila {
    No2 *cabeca, *cauda;
    int n;

    Fila() {
        cabeca = cauda = NULL;
        n = 0;
    }

    bool vazia() { // O(1)
        return (cabeca == NULL);
    }

    void inserir(int v) { // O(1)
        No2 *novo = new No2();
        novo->valor = v;
        if (vazia()) {
            novo->prox = NULL;
            cabeca = novo;
            cauda = novo;
        } else {
            novo->prox = NULL;
            cauda->prox = novo;
            cauda = novo;
        }
        n++;
    }

    int tamanho() { // O(1)
        return n;
    }

    void remover() { // O(1)
        if (!vazia()) {
            if (tamanho() == 1) {
                No2 *aux = cabeca;
                cabeca = NULL;
                cauda = NULL;
                delete(aux);
            } else {
                No2 *aux = cabeca;
                cabeca = cabeca->prox;
                delete(aux);
            }
            n--;
        }
    }

    int frente() {
        if (vazia()) {
            return NULL;
        }
        return cabeca->valor;
    }

    void imprimir()
    {
        No2 *aux=cabeca;


        while(aux)
        {
            printf("%d->",aux->valor);
            aux=aux->prox;

        }
        printf("\n");
    }


};


void revertendo(Fila f)
{

    Pilha p;

    while(!f.vazia())
    {
        p.inserir(f.frente());
        f.remover();

    }


    while(!p.vazia())
    {
        f.inserir(p.topoPilha());
        p.remover();


    }

    f.imprimir();

}


int main() {

    Pilha p;
    Fila f;

    f.inserir(5);
    f.inserir(4);
    f.inserir(3);
    f.inserir(2);
    f.inserir(1);

    f.imprimir();

    revertendo(f);


    return 0;
}
